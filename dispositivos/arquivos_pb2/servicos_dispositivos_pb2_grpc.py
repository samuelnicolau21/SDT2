# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import servicos_dispositivos_pb2 as proto_dot_servicos__dispositivos__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in proto/servicos_dispositivos_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class LampadaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LigarDesligar = channel.unary_unary(
                '/dispositivos.LampadaService/LigarDesligar',
                request_serializer=proto_dot_servicos__dispositivos__pb2.LigarDesligarRequest.SerializeToString,
                response_deserializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.Brilho = channel.unary_unary(
                '/dispositivos.LampadaService/Brilho',
                request_serializer=proto_dot_servicos__dispositivos__pb2.BrilhoRequest.SerializeToString,
                response_deserializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.ConsultarEstado = channel.unary_unary(
                '/dispositivos.LampadaService/ConsultarEstado',
                request_serializer=proto_dot_servicos__dispositivos__pb2.EmptyRequest.SerializeToString,
                response_deserializer=proto_dot_servicos__dispositivos__pb2.LampadaEstadoResponse.FromString,
                _registered_method=True)


class LampadaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LigarDesligar(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Brilho(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConsultarEstado(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LampadaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LigarDesligar': grpc.unary_unary_rpc_method_handler(
                    servicer.LigarDesligar,
                    request_deserializer=proto_dot_servicos__dispositivos__pb2.LigarDesligarRequest.FromString,
                    response_serializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.SerializeToString,
            ),
            'Brilho': grpc.unary_unary_rpc_method_handler(
                    servicer.Brilho,
                    request_deserializer=proto_dot_servicos__dispositivos__pb2.BrilhoRequest.FromString,
                    response_serializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.SerializeToString,
            ),
            'ConsultarEstado': grpc.unary_unary_rpc_method_handler(
                    servicer.ConsultarEstado,
                    request_deserializer=proto_dot_servicos__dispositivos__pb2.EmptyRequest.FromString,
                    response_serializer=proto_dot_servicos__dispositivos__pb2.LampadaEstadoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dispositivos.LampadaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dispositivos.LampadaService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class LampadaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LigarDesligar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dispositivos.LampadaService/LigarDesligar',
            proto_dot_servicos__dispositivos__pb2.LigarDesligarRequest.SerializeToString,
            proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Brilho(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dispositivos.LampadaService/Brilho',
            proto_dot_servicos__dispositivos__pb2.BrilhoRequest.SerializeToString,
            proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConsultarEstado(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dispositivos.LampadaService/ConsultarEstado',
            proto_dot_servicos__dispositivos__pb2.EmptyRequest.SerializeToString,
            proto_dot_servicos__dispositivos__pb2.LampadaEstadoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class TelevisaoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LigarDesligar = channel.unary_unary(
                '/dispositivos.TelevisaoService/LigarDesligar',
                request_serializer=proto_dot_servicos__dispositivos__pb2.LigarDesligarRequest.SerializeToString,
                response_deserializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.Canal = channel.unary_unary(
                '/dispositivos.TelevisaoService/Canal',
                request_serializer=proto_dot_servicos__dispositivos__pb2.CanalRequest.SerializeToString,
                response_deserializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.ConsultarEstado = channel.unary_unary(
                '/dispositivos.TelevisaoService/ConsultarEstado',
                request_serializer=proto_dot_servicos__dispositivos__pb2.EmptyRequest.SerializeToString,
                response_deserializer=proto_dot_servicos__dispositivos__pb2.TelevisaoEstadoResponse.FromString,
                _registered_method=True)


class TelevisaoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LigarDesligar(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Canal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConsultarEstado(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TelevisaoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LigarDesligar': grpc.unary_unary_rpc_method_handler(
                    servicer.LigarDesligar,
                    request_deserializer=proto_dot_servicos__dispositivos__pb2.LigarDesligarRequest.FromString,
                    response_serializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.SerializeToString,
            ),
            'Canal': grpc.unary_unary_rpc_method_handler(
                    servicer.Canal,
                    request_deserializer=proto_dot_servicos__dispositivos__pb2.CanalRequest.FromString,
                    response_serializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.SerializeToString,
            ),
            'ConsultarEstado': grpc.unary_unary_rpc_method_handler(
                    servicer.ConsultarEstado,
                    request_deserializer=proto_dot_servicos__dispositivos__pb2.EmptyRequest.FromString,
                    response_serializer=proto_dot_servicos__dispositivos__pb2.TelevisaoEstadoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dispositivos.TelevisaoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dispositivos.TelevisaoService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TelevisaoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LigarDesligar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dispositivos.TelevisaoService/LigarDesligar',
            proto_dot_servicos__dispositivos__pb2.LigarDesligarRequest.SerializeToString,
            proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Canal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dispositivos.TelevisaoService/Canal',
            proto_dot_servicos__dispositivos__pb2.CanalRequest.SerializeToString,
            proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConsultarEstado(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dispositivos.TelevisaoService/ConsultarEstado',
            proto_dot_servicos__dispositivos__pb2.EmptyRequest.SerializeToString,
            proto_dot_servicos__dispositivos__pb2.TelevisaoEstadoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ArCondicionadoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LigarDesligar = channel.unary_unary(
                '/dispositivos.ArCondicionadoService/LigarDesligar',
                request_serializer=proto_dot_servicos__dispositivos__pb2.LigarDesligarRequest.SerializeToString,
                response_deserializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.Temperatura = channel.unary_unary(
                '/dispositivos.ArCondicionadoService/Temperatura',
                request_serializer=proto_dot_servicos__dispositivos__pb2.TemperaturaRequest.SerializeToString,
                response_deserializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.ConsultarEstado = channel.unary_unary(
                '/dispositivos.ArCondicionadoService/ConsultarEstado',
                request_serializer=proto_dot_servicos__dispositivos__pb2.EmptyRequest.SerializeToString,
                response_deserializer=proto_dot_servicos__dispositivos__pb2.ArCondicionadoEstadoResponse.FromString,
                _registered_method=True)


class ArCondicionadoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LigarDesligar(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Temperatura(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConsultarEstado(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ArCondicionadoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LigarDesligar': grpc.unary_unary_rpc_method_handler(
                    servicer.LigarDesligar,
                    request_deserializer=proto_dot_servicos__dispositivos__pb2.LigarDesligarRequest.FromString,
                    response_serializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.SerializeToString,
            ),
            'Temperatura': grpc.unary_unary_rpc_method_handler(
                    servicer.Temperatura,
                    request_deserializer=proto_dot_servicos__dispositivos__pb2.TemperaturaRequest.FromString,
                    response_serializer=proto_dot_servicos__dispositivos__pb2.StatusResponse.SerializeToString,
            ),
            'ConsultarEstado': grpc.unary_unary_rpc_method_handler(
                    servicer.ConsultarEstado,
                    request_deserializer=proto_dot_servicos__dispositivos__pb2.EmptyRequest.FromString,
                    response_serializer=proto_dot_servicos__dispositivos__pb2.ArCondicionadoEstadoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dispositivos.ArCondicionadoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dispositivos.ArCondicionadoService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ArCondicionadoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LigarDesligar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dispositivos.ArCondicionadoService/LigarDesligar',
            proto_dot_servicos__dispositivos__pb2.LigarDesligarRequest.SerializeToString,
            proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Temperatura(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dispositivos.ArCondicionadoService/Temperatura',
            proto_dot_servicos__dispositivos__pb2.TemperaturaRequest.SerializeToString,
            proto_dot_servicos__dispositivos__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConsultarEstado(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dispositivos.ArCondicionadoService/ConsultarEstado',
            proto_dot_servicos__dispositivos__pb2.EmptyRequest.SerializeToString,
            proto_dot_servicos__dispositivos__pb2.ArCondicionadoEstadoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
